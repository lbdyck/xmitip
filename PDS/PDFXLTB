/* REXX                                                            */
/*-----------------------------------------------------------------*/
/* Create XMITIPTR translate table using EDCiconv                  */
/*-----------------------------------------------------------------*/
/* Format:                                                         */
/*         PDFXLTB host-cp                                         */
/*                                                                 */
/* Parameters:                                                     */
/*         host-cp  : EBCDIC codepage used for the host            */
/*                    Default: IBM-277                             */
/* Output:                                                         */
/*         A dataset is created containing the source for          */
/*         XMITIPTR with the following name:                       */
/*           userid.XMITIPTR.hostcp                                */
/*                                                                 */
/* Dependencies:                                                   */
/*         Language Environment run-time library (SYS1.SCEERUN)    */
/*          must be in steplib or linklist.                        */
/*                                                                 */
/* Creation date: 30.04.2001                                       */
/*                                                                 */
/* Author: Felipe Cvitanich   (felipe@dk.ibm.com)                  */
/*         Advisory I/T Specialist                                 */
/*         IBM Global Services                                     */
/*         Sortemosevej 21, DK-3450 Alleroed                       */
/*         Denmark                                                 */
/*         Tlf.: (+45) 4523 9671                                   */
/*                                                                 */
/*-----------------------------------------------------------------*/
/* Disclaimer:                                                     */
/* The software is being provided to you AS IS without any         */
/* warranties (express or implied) whatsoever, including but       */
/* not limited to any implied warranties of merchantability,       */
/* quality, performance or fitness for any particular purpose.     */
/* IBM is under no obligation to provide support of any kind       */
/* for the software. IBM accepts no liability for any damages      */
/* you may suffer as a result of your use of the software,         */
/* including any damages claimed by you, based on any third        */
/* party claim. In no event will IBM be liable for any             */
/* indirect, special, or consequential damages, even if IBM        */
/* has been advised of their possibility.                          */
/*                                                                 */
/*-----------------------------------------------------------------*/
arg ebcdic
if ebcdic = "" then ebcdic = "IBM-277"
Ascii = "ISO8859-1"
output_dsn = userid()||".XMITIPTR." ,
             || strip(left(space(translate(ebcdic," ","-"),0),8))
cc = 0
ddn = "XL"time("S")   /* DD NAME for HEX string    */
dspfx = userid()||".XLATE."||ddn
Address TSO "Alloc fi(SYSUT1) DA('"||dspfx||".HEXSTR') NEW REUSE",
      "SPACE(1 1) TRACKS RECFM(F) LRECL(256) BLKSIZE(256)"
cc = rc
if cc = 0 then
  do
   hexrange.1 = Xrange( '00'x, 'FF'x )
   "EXECIO 1 DISKW SYSUT1 (FINIS STEM HEXRANGE."
   cc = rc
  end
else
  say "Error" cc "during allocation of '"||dspfx||".HEXSTR'"
/* Do Ebcdic->Ascii translation using iconv */
if cc = 0 then
  do
   Address TSO "Alloc fi(SYSUT2) DA(XLATE."||ddn||".TARGET) NEW REUSE",
         "SPACE(1 1) TRACKS RECFM(F) LRECL(256) BLKSIZE(256)"
   cc = rc
   if cc = 0 then
     do
      iconvprm = "FROMCODE("ebcdic"),TOCODE("ascii")"
      Address LINKMVS "EDCICONV iconvprm"
      cc = rc
      if cc = 0 then
        do
         "EXECIO * DISKR SYSUT2 (FINIS STEM ASCII."
         cc = rc
        end
      else
        do
         say "Error" cc "during invocation of Iconv"
         say "    With parm=" iconvprm
        end
     end
   else say "Error" cc "during allocation of '"||dspfx||".TARGET'"
  end
Address TSO "FREE FI(SYSUT1 SYSUT2) DELETE"
if cc = 0 & ascii.0 > 0 then
  do
   str.  = ""
   str.1 = "/* REXX */"
   str.2 = "/*" copies("-",65) "*/"
   str.3 = "/*" left("XMITIPTR:",65) "*/"
   str.4 = "/*" ,
           left("   " ebcdic "->" Ascii "translation for xmitipd",65) ,
           "*/"
   str.5 = "/*" left("Generated on:" date() time(),65) "*/"
   str.6 = "/*" copies("-",65) "*/"
   str.7 = "         /* 0 1 2 3 4 5 6 7 8 9 A B C D E F */"
   str.8 = "return ,"
   sn = 8
   hexrange = c2x(ascii.1)
   cont = "|| ,"
     do n = 1 to 16
      pos = ((n-1)*32)+1
      if n = 16 then cont = "    "
      sn = sn+1
      str.sn= "          '"||substr(hexrange,pos,32)||"'x",
              cont "/*" right(d2x((n-1)*16),2,"0") "*/"
     end
   str.0 = sn
   if sysdsn("'"||output_dsn"'") = "OK" then
     do
      Address TSO "Alloc fi("ddn") DA('"||output_dsn||"') OLD REUSE"
      cc = rc
     end
   else
     do
      Address TSO "Alloc fi("ddn") DA('"||output_dsn||"') NEW REUSE",
             "SPACE(1 1) TRACKS RECFM(F B) LRECL(80) BLKSIZE(8880)"
      cc = rc
     end
   if cc = 0 then
     do
      "EXECIO" str.0 "DISKW" ddn "(FINIS STEM STR."
      cc = rc
      if cc \= 0 then
         say "Error" cc "writing to '"||output_dsn||"'"
     end
   else
     say "Error" cc "during allocation of '"||output_dsn||"'"
   Address TSO "FREE FI("ddn")"
  end
exit cc
