/* REXX                                                            */
/*-----------------------------------------------------------------*/
/* Create SMTP translate table using EDCiconv                      */
/*-----------------------------------------------------------------*/
/* Format:                                                         */
/*         SMTPXLTB ÆEbcdic-cp Æascii-cp¤¤                         */
/*                                                                 */
/* Parameters:                                                     */
/*         ebcdic-cp: EBCDIC codepage supported by iconv           */
/*                    Default: IBM-277                             */
/*         Ascii-cp:  ASCII  codepage supported by iconv           */
/*                    Default: ISO8859-1                           */
/* Output:                                                         */
/*         A dataset is created containing the source for SMTP     */
/*         translate table with the following name:                */
/*           userid.SMTP.TCPXLSRC.ebcdiccp.asciicp                 */
/*                                                                 */
/* Dependencies:                                                   */
/*         Language Environment run-time library (SYS1.SCEERUN)    */
/*          must be in steplib or linklist.                        */
/*                                                                 */
/* Creation date: 30.04.2001                                       */
/*                                                                 */
/* Author: Felipe Cvitanich   (felipe@dk.ibm.com)                  */
/*         Advisory I/T Specialist                                 */
/*         IBM Global Services                                     */
/*         Sortemosevej 21, DK-3450 Alleroed                       */
/*         Denmark                                                 */
/*         Tlf.: (+45) 4523 9671                                   */
/*                                                                 */
/*-----------------------------------------------------------------*/
/* Disclaimer:                                                     */
/* The software is being provided to you AS IS without any         */
/* warranties (express or implied) whatsoever, including but       */
/* not limited to any implied warranties of merchantability,       */
/* quality, performance or fitness for any particular purpose.     */
/* IBM is under no obligation to provide support of any kind       */
/* for the software. IBM accepts no liability for any damages      */
/* you may suffer as a result of your use of the software,         */
/* including any damages claimed by you, based on any third        */
/* party claim. In no event will IBM be liable for any             */
/* indirect, special, or consequential damages, even if IBM        */
/* has been advised of their possibility.                          */
/*                                                                 */
/*-----------------------------------------------------------------*/
arg ebcdic Ascii
if ebcdic = "" then ebcdic = "IBM-277"
if Ascii = "" then Ascii = "ISO8859-1"
output_dsn = userid()||".SMTP.TCPXLSRC." ,
             || strip(left(space(translate(ebcdic," ","-"),0),8))||"." ,
             || strip(left(space(translate(ascii," ","-"),0),8))
cc = 0
ddn = "XL"time("S")   /* DD NAME for HEX string    */
dspfx = userid()||".XLATE."||ddn
Address TSO "Alloc fi(SYSUT1) DA('"||dspfx||".HEXSTR') NEW REUSE",
      "SPACE(1 1) TRACKS RECFM(F) LRECL(256) BLKSIZE(256)"
cc = rc
if cc = 0 then
  do
   hexrange.1 = Xrange( '00'x, 'FF'x )
   "EXECIO 1 DISKW SYSUT1 (FINIS STEM HEXRANGE."
   cc = rc
  end
else
  say "Error" cc "during allocation of '"||dspfx||".HEXSTR'"
/* Do Ascii translation using iconv */
if cc = 0 then
  do
   Address TSO "Alloc fi(SYSUT2) DA(XLATE."||ddn||".TARGET) NEW REUSE",
         "SPACE(1 1) TRACKS RECFM(F) LRECL(256) BLKSIZE(256)"
   cc = rc
   if cc = 0 then
     do
      iconvprm = "FROMCODE("ebcdic"),TOCODE("Ascii")"
      Address LINKMVS "EDCICONV iconvprm"
      cc = rc
      if cc = 0 then
        do
         "EXECIO * DISKR SYSUT2 (FINIS STEM ASCII."
         cc = rc
        end
      else
        do
         say "Error" cc "during invocation of Iconv"
         say "    With parm=" iconvprm
        end
     end
   else say "Error" cc "during allocation of '"||dspfx||".TARGET'"
  end
/* Do Ebcdic translation using iconv */
if cc = 0 then
  do
   Address TSO "FREE FI(SYSUT2) DELETE"
   Address TSO "Alloc fi(SYSUT2) DA(XLATE."||ddn||".TARGET) NEW REUSE",
         "SPACE(1 1) TRACKS RECFM(F) LRECL(256) BLKSIZE(256)"
   cc = rc
   if cc = 0 then
     do
      iconvprm = "FROMCODE("Ascii"),TOCODE("ebcdic")"
      Address LINKMVS "EDCICONV iconvprm"
      cc = rc
      if cc = 0 then
        do
         "EXECIO * DISKR SYSUT2 (FINIS STEM EBCDIC."
         cc = rc
        end
      else
        do
         say "Error" cc "during invocation of Iconv"
         say "    With parm=" iconvprm
        end
     end
   else say "Error" cc "during allocation of '"||dspfx||".TARGET'"
  end
Address TSO "FREE FI(SYSUT1 SYSUT2) DELETE"
if cc = 0 & ascii.0 > 0 & ebcdic.0 > 0 then
  do
   str.  = ";"
   str.1 = "; ASCII-to-EBCDIC table"
   str.2 = ";" Ascii "->" ebcdic
   str.3 = "; '00'X to '1F'x preserved from standard table"
   str.4 = ";"
   str.5 = "   00 01 02 03 37 2D 2E 2F 16 05 25 0B 0C 0D 0E 0F  ; 00 ;"
   str.6 = "   10 11 12 13 3C 3D 32 26 18 19 3F 27 22 1D 35 1F  ; 10 ;"
   sn = 6
   hexrange = c2x(ascii.1)
     do n = 3 to 16
      pos = ((n-1)*32)+1
      sn = sn+1
      str.sn = "  "
        do i = pos to pos+31 by 2
         str.sn = str.sn substr(hexrange,i,2)
        end
      str.sn = str.sn " ;" d2x((n-1)*16) ";"
     end
   str.21= ";"
   str.22= "; EBCDIC-to-ASCII table"
   str.23= ";" ebcdic "->" Ascii
   str.24= "; '00'X to '3F'x preserved from standard table"
   str.25= "   00 01 02 03 1A 09 1A 7F 1A 1A 1A 0B 0C 0D 0E 0F  ; 00 ;"
   str.26= "   10 11 12 13 1A 0A 08 1A 18 19 1A 1A 1C 1D 1E 1F  ; 10 ;"
   str.27= "   1A 1A 1C 1A 1A 0A 17 1B 1A 1A 1A 1A 1A 05 06 07  ; 20 ;"
   str.28= "   1A 1A 16 1A 1A 1E 1A 04 1A 1A 1A 1A 14 15 1A 1A  ; 30 ;"
   sn = 28
   hexrange = c2x(ebcdic.1)
     do n = 5 to 16
      pos = ((n-1)*32)+1
      sn = sn+1
      str.sn = "  "
        do i = pos to pos+31 by 2
         str.sn = str.sn  substr(hexrange,i,2)
        end
      str.sn = str.sn " ;" d2x((n-1)*16) ";"
     end
   str.0 = sn
   if sysdsn("'"||output_dsn"'") = "OK" then
     do
      Address TSO "Alloc fi("ddn") DA('"||output_dsn||"') OLD REUSE"
      cc = rc
     end
   else
     do
      Address TSO "Alloc fi("ddn") DA('"||output_dsn||"') NEW REUSE",
             "SPACE(1 1) TRACKS RECFM(F B) LRECL(80) BLKSIZE(8880)"
      cc = rc
     end
   if cc = 0 then
     do
      "EXECIO" str.0 "DISKW" ddn "(FINIS STEM STR."
      cc = rc
      if cc \= 0 then
         say "Error" cc "writing to '"||output_dsn||"'"
     end
   else
     say "Error" cc "during allocation of '"||output_dsn||"'"
   Address TSO "FREE FI("ddn")"
  end
exit cc
